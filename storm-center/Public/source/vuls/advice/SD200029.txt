xpath注入漏洞修复方案：
    1、数据提交到服务器上端，在服务端正式处理这批数据之前，对提交数据的合法性进行验证。
    2、检查提交的数据是否包含特殊字符，对特殊字符进行编码转换或替换、删除敏感字符或字符串。
    3、对于系统出现的错误信息，以IE错误编码信息替换，屏蔽系统本身的出错信息。
    4、参数化XPath查询，将需要构建的XPath查询表达式，以变量的形式表示，变量不是可以执行的脚本。
       如下代码可以通过创建保存查询的外部文件使查询参数化：
       declare variable $loginID as xs：string external；
       declare variable $password as xs：string external；
    5、通过MD5、SSL等加密算法，对于数据敏感信息和在数据传输过程中加密，
       即使某些非法用户通过非法手法获取数据包，看到的也是加密后的信息。